---
import Section from "./Section.astro";
import type { ExperienceProps } from "@types";

interface Props {
  experience: ExperienceProps[];
}

const { experience } = Astro.props;
---

<Section text="Work Experience" href="experience">
  {
    experience.map(
      ({ company, position, startDate, endDate, summary, stack, logo }, pIndex) => (
        <>
          <span class="relative flex justify-center mb-5">
            <div class="absolute inset-x-0 top-1/2 h-px -translate-y-1/2 bg-transparent bg-gradient-to-r from-transparent via-gray-500 to-transparent opacity-75" />
          </span>
          <div class="mb-10">
            <div class="flex gap-5">
              <img
                transition:animate="slide"
                class="w-24 h-24 object-cover rounded-lg flex-shrink-0"
                src={logo}
                alt={company}
              />
              <div>
                <h3
                  transition:animate="slide"
                  class="text-2xl font-serif font-semibold text-white mb-1.5"
                >
                  {company}
                </h3>
                <div class="flex flex-col items-start pb-5">
                  <h4
                    transition:animate="slide"
                    class="text-2xl font-serif text-primary font-medium mb-0.5"
                  >
                    {(position && position.split(" ").length > 1 && (
                      <>
                        <span class="text-rose-500">
                          {position.split(" ")[0]}
                        </span>{" "}
                        {position.split(" ").slice(1).join(" ")}
                      </>
                    )) || (
                      /* if position has only one word */
                      <>
                        <span class="text-rose-500">{position.slice(0, 3)}</span>
                        {position.slice(3)}
                      </>
                    )}
                  </h4>
                  <span
                    transition:animate="slide"
                    class="font-bold text-sm text-white/70 pb-[2px]"
                  >
                    {startDate} â€” {endDate}
                  </span>
                </div>
              </div>
            </div>

            <span
              transition:animate="slide"
              class="italic text-white/70 flex flex-wrap gap-2 py-4"
            >
              {Object.entries(stack).map(([key, values]) => (
                <div class="group relative inline-block">
                  <span class="cursor-help">ðŸ”¹{key}</span>
                  <div class="hidden group-hover:block absolute left-0 bottom-full mb-2 w-max">
                    <div class="bg-gray-900 text-white text-sm rounded-lg shadow-lg p-2">
                      <ul transition:animate="slide" class="list-none">
                        {values.map((value) => (
                          <li class="whitespace-nowrap">ðŸ”¹{value}</li>
                        ))}
                      </ul>
                    </div>
                  </div>
                </div>
              ))}
            </span>

            {Array.isArray(summary) ? (
              <ul class="list-none">
                {summary.map((log, sIndex) => (
                  <li class="text-base relative text-neutral pl-8 mb-3 before:absolute before:left-0 before:top-1 before:content-[url(/check.svg)]">
                    {log.split(" ").map((word, wIndex) => (
                      <span
                        class="cascade-word"
                        style={`--i: ${pIndex * 10 + sIndex * 5 + wIndex};`}
                      >
                        {word}&nbsp;
                      </span>
                    ))}
                  </li>
                ))}
              </ul>
            ) : (
              <p class="text-base text-neutral">
                {summary.split(" ").map((word, wIndex) => (
                  <span class="cascade-word" style={`--i: ${pIndex * 10 + wIndex};`}>
                    {word}&nbsp;
                  </span>
                ))}
              </p>
            )}
          </div>
        </>
      ),
    )
  }
</Section>
